{"date":"2023-07-15T10:15:24.333Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/api/auth/login"}
{"date":"2023-07-15T10:15:48.902Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/api/auth/login"}
{"date":"2023-07-15T10:16:27.216Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"//auth/login"}
{"date":"2023-07-15T10:16:39.301Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:16:39.367Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:16:39.405Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:19:04.061Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:19:04.068Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:19:04.072Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:19:05.978Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:19:05.984Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:19:05.986Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:19:12.904Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:19:12.908Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:19:12.915Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:19:24.352Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:19:24.356Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:19:24.358Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:28:35.310Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:28:35.315Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:28:35.320Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:29:36.699Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:29:36.706Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:29:36.709Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:30:20.294Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:30:20.300Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:30:20.304Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:30:22.040Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:30:22.046Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T10:30:22.050Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T10:31:07.823Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/signup"}
{"date":"2023-07-15T10:31:27.231Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:31:48.819Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T10:35:13.764Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:35:13.770Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:35:31.042Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:35:31.053Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:36:50.677Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:36:50.686Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:43:58.818Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:43:58.831Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:44:00.213Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:44:00.220Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:44:01.252Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:44:01.258Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:44:02.252Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:44:02.262Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:54:53.885Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:54:53.895Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:54:57.860Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:54:57.868Z","level":"error","message":"User validation failed: email: Path `email` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:55:38.476Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:55:38.482Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T10:56:13.335Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T10:56:13.343Z","level":"error","message":"User validation failed: last_name: Path `last_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:01:06.909Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:01:06.922Z","level":"error","message":"User validation failed: last_name: Path `last_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:01:09.853Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:01:09.862Z","level":"error","message":"User validation failed: last_name: Path `last_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:12.317Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:12.324Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:18.353Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:18.360Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:38.972Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:38.978Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:41.211Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:41.216Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:52.408Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:52.413Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:53.795Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:53.803Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:03:54.738Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:03:54.744Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:04:03.748Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:04:03.763Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:04:08.366Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:04:08.370Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:04:28.203Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:04:28.207Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:04:29.929Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:04:29.934Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:04:33.706Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:04:33.714Z","level":"error","message":"User validation failed: last_name: Path `last_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:05:59.089Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:05:59.094Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:06:01.857Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:06:01.863Z","level":"error","message":"User validation failed: first_name: Path `first_name` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:06:22.100Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:06:37.412Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:06:43.549Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:06:43.550Z","level":"error","message":"Last name is required","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:08:11.687Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:08:11.706Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T11:08:11.712Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:08:45.177Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:08:45.183Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T11:08:45.188Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:08:46.564Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:08:46.568Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T11:08:46.574Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:08:50.336Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:08:50.341Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-07-15T11:08:50.345Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:10:42.369Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:10:42.401Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:10:48.712Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:13:15.204Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:13:15.235Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:15:33.125Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:15:33.143Z","level":"error","message":"Cannot read properties of undefined (reading 'match')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:25:10.470Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:25:10.490Z","level":"error","message":"Invalid email","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:25:22.950Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:25:22.952Z","level":"error","message":"Password is required","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:40:25.907Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:40:25.917Z","level":"error","message":"Last name is required","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:41:42.004Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:41:42.021Z","level":"error","message":"Password must contain atleast one uppercase letter, one special character and one number","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-07-15T11:44:06.416Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:44:11.673Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:44:11.675Z","level":"error","message":"Email is required","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:44:31.875Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:44:31.877Z","level":"error","message":"Password is required","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:44:38.730Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:44:38.865Z","level":"error","message":"Invalid credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:54:25.738Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/register"}
{"date":"2023-07-15T11:54:31.874Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T11:54:32.003Z","level":"error","message":"newrequest is not defined","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T11:55:16.573Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T12:02:22.186Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T12:02:22.219Z","level":"error","message":"User does not exist","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-15T12:02:26.805Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T12:02:35.232Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/auth/login"}
{"date":"2023-07-15T12:02:35.234Z","level":"error","message":"Invalid email","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-07-20T09:10:18.431Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger.js"}
{"date":"2023-07-20T09:10:38.367Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger.js"}
{"date":"2023-07-20T09:10:47.666Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger"}
{"date":"2023-07-20T09:10:53.002Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/"}
{"date":"2023-07-20T09:10:53.093Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/favicon.ico"}
{"date":"2023-07-20T09:14:40.869Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger,json"}
{"date":"2023-07-20T09:14:52.699Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger_output,json"}
{"date":"2023-07-20T09:15:33.572Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger_output.json"}
{"date":"2023-07-20T09:17:29.329Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger"}
{"date":"2023-07-20T09:20:59.357Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger"}
{"date":"2023-07-20T09:21:08.814Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger"}
{"date":"2023-07-20T09:21:24.869Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger_output.json"}
{"date":"2023-07-20T09:21:30.422Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger.json"}
{"date":"2023-07-20T09:22:07.598Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger.json"}
{"date":"2023-07-20T09:22:48.745Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/swagger.json"}
